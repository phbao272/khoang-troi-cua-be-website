import { GoogleSpreadsheet } from "google-spreadsheet";

import { JWT } from "google-auth-library";

import creds from "@/configs/test-ktcb-209d01421a8f.json";

// // Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
// const serviceAccountAuth = new JWT({
//   // env var values here are copied from service account credentials generated by google
//   // see "Authentication" section in docs for more info
//   email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
//   key: process.env.GOOGLE_PRIVATE_KEY,
//   scopes: ["https://www.googleapis.com/auth/spreadsheets"],
// });

// const doc = new GoogleSpreadsheet(
//   process.env.GOOGLE_SHEET_ID as string,
//   serviceAccountAuth
// );

const SCOPES = [
  "https://www.googleapis.com/auth/spreadsheets",
  "https://www.googleapis.com/auth/drive.file",
];

const jwt = new JWT({
  email: creds.client_email,
  key: creds.private_key,
  scopes: SCOPES,
});

const doc = new GoogleSpreadsheet(
  "1X3AS8rXmyEn3lBhz65S36jlgwN26kDPsXZBWPnx2_kE",
  jwt
);

export default async function handler(req, res) {
  try {
    await doc.loadInfo(); // loads document properties and worksheets
    const sheet = doc.sheetsByIndex[0];
    const rows = await sheet.getRows();

    console.log(rows);

    await doc.updateProperties({ title: "renamed doc" });

    const _sheet = doc.sheetsByIndex[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
    console.log(_sheet.title);
    console.log(_sheet.rowCount);

    res.status(200).json({ message: "A ok!" });
  } catch (error) {
    console.log(error);

    res.status(500).json(error);
  }
}
